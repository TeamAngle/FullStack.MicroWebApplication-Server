{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"./services/user.service\";\nimport * as i2 from \"./services/blog-post.service\";\nimport * as i3 from \"./services/tag.service\";\nimport * as i4 from \"@angular/router\";\nexport let AppComponent = /*#__PURE__*/(() => {\n  class AppComponent {\n    constructor(userService, blogPostService, tagService, elementRef) {\n      this.userService = userService;\n      this.blogPostService = blogPostService;\n      this.tagService = tagService;\n      this.elementRef = elementRef;\n      this.title = 'employeemanagerapp'; // public employees: Employee[];\n      // public recipes: Recipe[];\n\n      this.user = {\n        name: 'Not Logged In',\n        id: null,\n        password: null,\n        blogPostList: []\n      };\n    }\n\n    ngOnInit() {\n      //this.getEmployees();\n      //this.getRecipes();\n      this.getUsers();\n      this.getCurrentUser(); // this.getBlogPosts();\n    }\n\n    ngAfterViewInit() {\n      this.elementRef.nativeElement.ownerDocument.body.style.backgroundColor = \"#8ca37e\";\n    } // public getEmployees(): void {\n    //   this.empoloyeeService.getEmployees().subscribe(\n    //     (response: Employee[]) => {\n    //       this.employees = response;\n    //     },\n    //     (error: HttpErrorResponse) => {\n    //       alert(error.message)\n    //     }\n    //   )\n    // }\n\n\n    addUser(user) {\n      //document.getElementById('add-employee-form').click();\n      this.userService.addUser(user).subscribe(response => {\n        console.log(response);\n        this.getUsers();\n      }, error => {\n        alert(error.message);\n      });\n    }\n\n    getUsers() {\n      this.userService.getUsers().subscribe(response => {\n        this.users = response;\n      }, error => {\n        alert(error.message);\n      });\n    }\n\n    getUser(userId, cb) {\n      this.userService.getUser(userId).subscribe(response => {\n        this.user = response;\n        if (cb) cb();\n      }, error => {\n        alert(error.message);\n      });\n    }\n\n    getCurrentUser() {\n      this.userService.getCurrentUser().subscribe(session => {\n        if (session.userId == 0) return;\n        this.getUser(session.userId);\n      }, error => {\n        alert(error.message);\n      });\n    }\n\n    usernameExists(name) {\n      //this.getUsers();\n      console.log(this.users);\n\n      for (let i = 0; i < this.users.length; i++) {\n        if (this.users[i].name === name) return true;\n      }\n\n      return false;\n    }\n\n    getBlogPosts() {\n      this.blogPostService.getBlogPosts().subscribe(response => {\n        this.blogs = response;\n      }, error => {\n        alert(error.message);\n      });\n    }\n\n    setCurrentUser(userId, cb) {\n      this.userService.updateCurrentUser({\n        id: 0,\n        userId: userId\n      }).subscribe(session => {\n        if (cb) cb();\n      });\n    }\n\n  }\n\n  AppComponent.ɵfac = function AppComponent_Factory(t) {\n    return new (t || AppComponent)(i0.ɵɵdirectiveInject(i1.UserService), i0.ɵɵdirectiveInject(i2.BlogPostService), i0.ɵɵdirectiveInject(i3.TagService), i0.ɵɵdirectiveInject(i0.ElementRef));\n  };\n\n  AppComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AppComponent,\n    selectors: [[\"app-root\"]],\n    decls: 1,\n    vars: 0,\n    template: function AppComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelement(0, \"router-outlet\");\n      }\n    },\n    directives: [i4.RouterOutlet],\n    styles: [\"\"]\n  });\n  return AppComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}